<%- include("partials/header.ejs") %>
<div class="w-screen min-h-screen p-4 bg-black">
    <table class="w-full text-white text-lg lg:text-2xl">
        <thead>
            <tr class="border-b border-gray-700">
                <th class="text-left py-4 px-2">PLAYER</th>
                <% for(let i = 0; i < cups; i++) { %>
                    <th class="text-center border-l border-gray-700 px-2">
                        <div class="flex flex-col items-center text-base">
                            <div>Hole <%= i + 1 %></div>
                            <div class="flex gap-1">
                                <span class="text-yellow-400">Par <%= tournament.pars[i] %></span>
                                <span class="text-pink-400">SI <%= tournament.strokeIndex[i] %></span>
                            </div>
                        </div>
                    </th>
                <% } %>
                <th class="text-center border-l border-gray-700">OUT</th>
                <th class="text-center border-l border-gray-700">IN</th>
                <th class="text-center border-l border-gray-700">GROSS</th>
                <th class="text-center border-l border-gray-700">Hdcp</th>
                <th class="text-center border-l border-gray-700">NET</th>
                <th class="text-center border-l border-gray-700">Total Points</th>
            </tr>
        </thead>
        <tbody>
            <% players.forEach(function(player) { %>
                <tr class="border-b border-gray-700 hover:bg-gray-900" data-player="<%= player.name %>">
                    <td class="py-2 px-2"><%= player.name %></td>
                    <% for(let i = 0; i < cups; i++) { %>
                        <td class="text-center border-l border-gray-700 px-2">
                            <div class="flex flex-col">
                                <span><%= player.strokes[i] || '-' %></span>
                                <span class="text-base <%= player.points && player.points[i] > 0 ? 'text-green-500' : player.points && player.points[i] < 0 ? 'text-red-500' : '' %>">
                                    <%= player.points != undefined ? player.points[i] : '' %>
                                </span>
                            </div>
                        </td>
                    <% } %>
                    <td class="text-center border-l border-gray-700"><%= player.out || '-' %></td>
                    <td class="text-center border-l border-gray-700"><%= player.in || '-' %></td>
                    <td class="text-center border-l border-gray-700"><%= player.gross || '-' %></td>
                    <td class="text-center border-l border-gray-700"><%= player.handicap || '-' %></td>
                    <td class="text-center border-l border-gray-700"><%= player.net || '-' %></td>
                    <td class="text-center border-l border-gray-700 font-bold"><%= player.totalPoints || '-' %></td>
                </tr>
            <% }); %>
        </tbody>
    </table>
</div>

<script>
async function updateScoreboard() {
    try {
        const scoreboardResponse = await fetch('/api/get-scoreboard');
        const players = await scoreboardResponse.json();
        
        const tbody = document.querySelector('tbody');
        tbody.innerHTML = '';

        players.forEach(player => {
            const row = document.createElement('tr');
            row.className = 'border-b border-gray-700 hover:bg-gray-900';
            row.setAttribute('data-player', player.name);

            const cells = [
                player.name,
                ...player.strokes.map((stroke, i) => ({
                    stroke: stroke || '-',
                    points: player.points[i] || ''
                })),
                player.out || '-',
                player.in || '-',
                player.gross || '-',
                player.handicap || '-',
                player.net || '-',
                player.totalPoints || '-'
            ];

            cells.forEach((cell, i) => {
                const td = document.createElement('td');
                td.className = 'text-center border-l border-gray-700 px-2' + (i === 0 ? ' py-2' : '');
                
                if (typeof cell === 'object') {
                    td.innerHTML = `
                        <div class="flex flex-col">
                            <span>${cell.stroke}</span>
                            <span class="text-base ${cell.points > 0 ? 'text-green-500' : cell.points < 0 ? 'text-red-500' : ''}">
                                ${cell.points}
                            </span>
                        </div>
                    `;
                } else {
                    td.textContent = cell;
                }
                
                if (i === cells.length - 1) {
                    td.classList.add('font-bold');
                }
                
                row.appendChild(td);
            });

            tbody.appendChild(row);
        });

        const statusResponse = await fetch('/api/tournament-status');
        const { tournamentFinished } = await statusResponse.json();

        if (tournamentFinished) {
            const bestPlayer = players.reduce((best, current) => 
                (!best || current.totalPoints > best.totalPoints) ? current : best, null);
            
            if (bestPlayer) {
                const winnerRow = document.querySelector(`tr[data-player="${bestPlayer.name}"]`);
                if (winnerRow) {
                    winnerRow.classList.add('bg-green-900');
                    winnerRow.classList.remove('hover:bg-gray-900');
                }
            }
        }

    } catch (error) {
        console.error('Error updating scoreboard:', error);
    }
}

updateScoreboard();
setInterval(updateScoreboard, 5000);
</script>
<%- include("partials/footer.ejs") %>